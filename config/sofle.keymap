/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <1 3>;
            then-layer = <4>;
        };
    };

    macros {
        refactor: refactor {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GLOBE &kp LS(F6)>;
            label = "REFACTOR";
        };

        find: find {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_GUI &kp LEFT_SHIFT &kp F>;
            label = "FIND";
        };

        create_constant: create_constant {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_GUI &kp LEFT_ALT &kp C>;
            label = "CREATE_CONSTANT";
        };

        create_variable: create_variable {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_GUI &kp LEFT_ALT &kp V>;
            label = "CREATE_VARIABLE";
        };
    };

    behaviors {
        tap_or_hold: tap_or_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_OR_HOLD";
            bindings = <&mo>, <&mo>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <53>;
            tapping-term-ms = <2000>;
        };

        behavior_tap_hold_key: behavior_tap_hold_key {
            compatible = "zmk,behavior-hold-tap";
            label = "BEHAVIOR_TAP_HOLD_KEY";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <2000>;
        };

        kp_and_refactor: kp_and_refactor {
            compatible = "zmk,behavior-hold-tap";
            label = "KP_AND_REFACTOR";
            bindings = <&refactor>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <16>;
            tapping-term-ms = <2000>;
        };

        behavior_find: behavior_find {
            compatible = "zmk,behavior-hold-tap";
            label = "BEHAVIOR_FIND";
            bindings = <&find>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <28>;
            tapping-term-ms = <2000>;
        };

        create_function: create_function {
            compatible = "zmk,behavior-hold-tap";
            label = "CREATE_FUNCTION";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <45>;
            tapping-term-ms = <2000>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp NON_US_BACKSLASH  &kp N1  &kp N2     &kp N3        &kp N4        &kp N5                          &kp N6         &kp N7  &kp N8     &kp N9   &kp N0    &kp EQUAL
&kp TAB               &kp Q   &kp W      &kp E         &kp R         &kp T                           &kp Y          &kp U   &kp I      &kp O    &kp P     &kp BACKSLASH
&kp ESC               &kp A   &kp S      &kp D         &kp F         &kp G                           &kp H          &kp J   &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT             &kp Z   &kp X      &kp C         &kp V         &kp B   &kp C_MUTE    &kp C_PP  &kp N          &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp ENTER
                              &kp LCTRL  &kp LEFT_ALT  &kp LEFT_GUI  &mo 1   &kp SPACE     &mo 1     &kp BACKSPACE  &none   &none      &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        navigation {
            display-name = "lower";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&kp F1          &kp F2           &kp F3            &kp F4             &kp F5                &kp F6                                      &kp F7                &kp F8                 &kp F9            &kp F10              &kp F11    &kp F12
&kp TAB         &kp EQUAL        &kp MINUS         &kp PLUS           &kp UNDERSCORE        &none                                       &kp LA(LEFT)          &kp LA(DOWN_ARROW)     &kp LA(UP_ARROW)  &kp LA(RIGHT)        &kp RG(P)  &kp LA(DELETE)
&kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                       &kp LEFT              &kp DOWN               &kp UP_ARROW      &kp RIGHT            &none      &kp LA(BACKSPACE)
&kp LEFT_SHIFT  &kp RG(Z)        &kp RG(X)         &kp RG(C)          &kp RG(V)             &kp RG(B)              &trans       &trans  &kp RG(LEFT)          &kp LG(DOWN_ARROW)     &kp LG(UP_ARROW)  &kp LG(RIGHT_ARROW)  &none      &kp ENTER
                                 &kp LEFT_ALT      &kp LEFT_GUI       &kp LCTRL             &trans                 &kp SPACE    &trans  &kp RG(LEFT_BRACKET)  &kp RG(RIGHT_BRACKET)  &trans            &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
